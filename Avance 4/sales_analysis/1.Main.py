"""
Proyecto Integrador 1 - Avance 4
Implementaci√≥n de Patrones de Dise√±o: Strategy y Factory Method

Este m√≥dulo implementa un sistema orientado a objetos para encontrar los N d√≠as
consecutivos con mayores ventas usando diferentes estrategias de an√°lisis.

Patrones de Dise√±o Implementados:
- Strategy Pattern: Encapsula diferentes algoritmos de an√°lisis
- Factory Method Pattern: Crea estrategias en tiempo de ejecuci√≥n
"""

import importlib.util
import sys
import os

# Importar el m√≥dulo 2.Demos usando importlib
_demos_path = os.path.join(os.path.dirname(__file__), '2.Demos.py')
_spec = importlib.util.spec_from_file_location("demos_module", _demos_path)
_demos_module = importlib.util.module_from_spec(_spec)
_spec.loader.exec_module(_demos_module)

demo_basic_usage = _demos_module.demo_basic_usage
demo_factory_pattern = _demos_module.demo_factory_pattern
demo_runtime_strategy_switching = _demos_module.demo_runtime_strategy_switching
demo_benchmark = _demos_module.demo_benchmark
demo_interactive_selection = _demos_module.demo_interactive_selection

# ============================================================================
# FUNCI√ìN PRINCIPAL
# ============================================================================

def main():
    """
    Funci√≥n principal que demuestra todas las capacidades del sistema.
    """
    print("\n" + "=" * 80)
    print("SISTEMA DE AN√ÅLISIS DE VENTAS")
    print("Implementaci√≥n con Patrones de Dise√±o: Strategy y Factory Method")
    print("=" * 80)
    
    # Ejecutar todas las demos
    demo_basic_usage()
    demo_factory_pattern()
    demo_runtime_strategy_switching()
    demo_benchmark()
    demo_interactive_selection()
    
    print("\n" + "=" * 80)
    print("‚úÖ TODAS LAS DEMOSTRACIONES COMPLETADAS")
    print("=" * 80)
    print("\nüí° Caracter√≠sticas implementadas:")
    print("   ‚úì Strategy Pattern para encapsular algoritmos")
    print("   ‚úì Factory Method para creaci√≥n en tiempo de ejecuci√≥n")
    print("   ‚úì Selecci√≥n autom√°tica basada en caracter√≠sticas del dataset")
    print("   ‚úì Aliases y preferencias para facilitar uso")
    print("   ‚úì Cambio de estrategia en tiempo de ejecuci√≥n")
    print("   ‚úì Benchmarking integrado de estrategias")
    print("   ‚úì Sistema extensible para agregar nuevas estrategias")
    print("=" * 80)


if __name__ == "__main__":
    main()

